<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Memo.Namo</title><link>http://example.org/</link><description>Recent content in Home on Memo.Namo</description><generator>Hugo</generator><language>ja-jp</language><lastBuildDate>Tue, 07 May 2024 23:29:28 +0900</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>データのセキュリティと暗号化</title><link>http://example.org/knowledge/20240507_encrypt/</link><pubDate>Tue, 07 May 2024 23:29:28 +0900</pubDate><guid>http://example.org/knowledge/20240507_encrypt/</guid><description>データのセキュリティと暗号化 データの暗号化関係は (参考資料1) 配下に資料有り。サブスクリプションの種別へ Enterprise を選択している場合には以下を KMS の暗</description></item><item><title>Databricks とネットワーク</title><link>http://example.org/knowledge/20240426_network/</link><pubDate>Fri, 26 Apr 2024 20:28:53 +0900</pubDate><guid>http://example.org/knowledge/20240426_network/</guid><description>現状は主にクラシックコンピュートプレーンについて記載。 自身で用意したVPCを使う Databricksの機能でワークスペース用のVPCを生成す</description></item><item><title>Snowflake を使ってみる</title><link>http://example.org/knowledge/20240319_snowflake/</link><pubDate>Tue, 19 Mar 2024 00:43:57 +0900</pubDate><guid>http://example.org/knowledge/20240319_snowflake/</guid><description>管理ツール SnowSQL が提供されている。 # ログイン $ snowsql -a {アカウント名} -u {ユーザ名} Password: ... # ログインすると SQL を実行できる SHOW DATABASES; ... 基本的なクエリ よくある構</description></item><item><title>Databricks 製品を使ってみる</title><link>http://example.org/knowledge/20231023_databricks/</link><pubDate>Mon, 23 Oct 2023 00:45:39 +0900</pubDate><guid>http://example.org/knowledge/20231023_databricks/</guid><description>ノートブック セル ノートブック内でコードを実行できる。実行はセル単位で行われ、既定では Python として解釈される。これはマジックコマンドを用いることで</description></item><item><title>Spark を使ってみる</title><link>http://example.org/knowledge/20231023_spark/</link><pubDate>Mon, 23 Oct 2023 00:45:39 +0900</pubDate><guid>http://example.org/knowledge/20231023_spark/</guid><description>アーキテクチャ ノード Driver &amp;hellip; 分散しない処理とExecutorの制御を行う Executor &amp;hellip; 分散処理を行うノード 処理の構造 ジョブ &amp;hellip; 複数のステージを内包。処理する</description></item><item><title>Postgres 備忘録</title><link>http://example.org/knowledge/20221116_postgres/</link><pubDate>Wed, 16 Nov 2022 09:16:21 +0900</pubDate><guid>http://example.org/knowledge/20221116_postgres/</guid><description>psql -h localhost -p 5432 -U postgres -d postgres Database テンプレートを指定しない場合は template1 から作られる。 # create db createdb {DB_NAME} -T template1 # modify db # (empty) # list db psql -l # switch db psql -d {DB_NAME} # drop db dropdb {DB_NAME} -- create db create database {DB_NAME} with template template1</description></item><item><title>お気に入り</title><link>http://example.org/knowledge/favorite/</link><pubDate>Sun, 20 Feb 2022 23:29:26 +0900</pubDate><guid>http://example.org/knowledge/favorite/</guid><description>開発 アセット lilToon ユニティちゃんトゥーンシェーダー らずべりー式 睡眠システム(ベータ) スクリーンシェーダー https://vrcmods.com/item/4300 https://www.luka.moe/june https://github.com/xwidghet/StereoCancer https://github.com/MochiesCode/Mochies-Unity-Shaders https://github.com/netri/Neitri-Unity-Shaders https://booth.pm/ja/items/1095863 https://discord.com/invite/MdykFMf ツール Modular Avatar VRCQuestTools OVR Advanced Settings XSOverlay ナレッ</description></item><item><title>作業環境を構築する (アバター用)</title><link>http://example.org/knowledge/make-workspace-for-avatar/</link><pubDate>Fri, 11 Feb 2022 18:40:14 +0900</pubDate><guid>http://example.org/knowledge/make-workspace-for-avatar/</guid><description>作業環境の方針 標準構成として以下のツールを導入します。 Unity Hub Unity DynamicBone VRChat SDK Blender Git ディレクトリ構造の方針は以下の通り。 VRCAvatar_Workspace ... プロジェクト名 ┣ Assets ┃ ┣ Asset01 ... DL し</description></item><item><title>アバターをアップロードする</title><link>http://example.org/knowledge/upload-avatar/</link><pubDate>Sat, 05 Feb 2022 18:18:23 +0900</pubDate><guid>http://example.org/knowledge/upload-avatar/</guid><description>アバターの用意 アバターは BOOTH などで販売されています。ここでは &amp;ldquo;火事屋&amp;rdquo; さんが無料配布している &amp;ldquo;U10H7500&amp;rdquo; をサンプルに VRChat へのアバタ</description></item><item><title>読書メモ: エンジニアを説明上手にする本 - 相手に応じた技術情報や知識の伝え方</title><link>http://example.org/knowledge/20220102_book/</link><pubDate>Sun, 02 Jan 2022 01:08:53 +0900</pubDate><guid>http://example.org/knowledge/20220102_book/</guid><description>開米瑞浩.『エンジニアを説明上手にする本 - 相手に応じた技術情報や知識の伝え方』.翔泳社,2016. 情報整理力の向上 普段からインプットを分類し</description></item><item><title>Jupyter Notebook で数式を美しく書く</title><link>http://example.org/knowledge/20211216_math/</link><pubDate>Thu, 16 Dec 2021 08:30:03 +0900</pubDate><guid>http://example.org/knowledge/20211216_math/</guid><description>キレイに書かれた数式って良いよね！ Jupyter Notebook の Markdownセルには数式を美しく書く機能があります。 数式は生テキストとして書くと見直した際に意味</description></item><item><title>Code Deploy</title><link>http://example.org/knowledge/aws-codedeploy/</link><pubDate>Thu, 16 Dec 2021 08:19:46 +0900</pubDate><guid>http://example.org/knowledge/aws-codedeploy/</guid><description>この記事で扱う範囲 公式チュートリアルの Wordpress サーバーを作成する資料を実践。 初学者過ぎてロールやエージェントインストールが辛かったので、現時点の理</description></item><item><title>Cloud Formation</title><link>http://example.org/knowledge/aws-cloudformation/</link><pubDate>Thu, 16 Dec 2021 08:07:20 +0900</pubDate><guid>http://example.org/knowledge/aws-cloudformation/</guid><description>CloudFormationでEC2インスタンスを建てる AWS上で構成ファイルによる構築をしてみた。これを使うとAWS サービスをJSON/Y</description></item><item><title>ノウハウ備忘録</title><link>http://example.org/knowledge/tableau-knowhow/</link><pubDate>Sat, 27 Nov 2021 21:57:28 +0900</pubDate><guid>http://example.org/knowledge/tableau-knowhow/</guid><description>過去に見かけた、またはやらかしたしくじりなど、 後から振り返った時にこうした方が良かったと思えた事柄をまとめていく。継続的に更新したい。 Tableau Desktop メ</description></item><item><title>SAML で SSO を構成する</title><link>http://example.org/knowledge/tabsrv-sso-saml/</link><pubDate>Sat, 27 Nov 2021 21:51:21 +0900</pubDate><guid>http://example.org/knowledge/tabsrv-sso-saml/</guid><description>ログイン1回でどこでも TableauServerのSAML シングルサインオン (以下SSO) を構成してみます。これができると、認証基盤側で1度</description></item><item><title>About</title><link>http://example.org/about/</link><pubDate>Fri, 26 Nov 2021 11:59:38 +0900</pubDate><guid>http://example.org/about/</guid><description>σ(´・ω・`) Twitter GitHub このサイトについて お勉強ノート置き場</description></item><item><title>Box を CLI から使ってみる</title><link>http://example.org/knowledge/20200903_box-cli/</link><pubDate>Thu, 03 Sep 2020 18:00:26 +0900</pubDate><guid>http://example.org/knowledge/20200903_box-cli/</guid><description>Box を CLI ツールから使用する # 認証情報を構成 box configure:environments:add authinf.json # ファイルをアップロード (既にファイルがある場合はエラーになる) box files:upload SRC_FILE_PATH --parent-id DST_FOLDR_ID # 新しいバージョンの</description></item><item><title>OpenSSL を使ってみる</title><link>http://example.org/knowledge/20200902_openssl/</link><pubDate>Wed, 02 Sep 2020 17:54:16 +0900</pubDate><guid>http://example.org/knowledge/20200902_openssl/</guid><description>基本要素 OpenSSL は http の通信暗号化 (https) で登場します。暗号化には公開鍵暗号方式を使用されており、次の要素が登場します。 鍵 &amp;hellip; 秘密鍵と公開鍵がある 署名要求 &amp;hellip;</description></item><item><title>Parameter Store</title><link>http://example.org/knowledge/aws-parameterstore/</link><pubDate>Tue, 25 Aug 2020 08:01:20 +0900</pubDate><guid>http://example.org/knowledge/aws-parameterstore/</guid><description>Parameter Store aws ssm describe-parameters aws ssm get-parameters-by-path &amp;ndash;path / &amp;ndash;recursive aws ssm get-parameter &amp;ndash;name /dev/tabsrv/passwd aws ssm put-parameter &amp;ndash;name /prod/tabsrv/server &amp;ndash;value &amp;lsquo;hoge&amp;rsquo; &amp;ndash;type String aws ssm delete-parameter &amp;ndash;name /prod/tabsrv/userid aws ssm delete-parameters &amp;ndash;names /prod/tabsrv /prod/tabsrv/server</description></item><item><title>DynamoDB</title><link>http://example.org/knowledge/aws-dynamodb/</link><pubDate>Mon, 24 Aug 2020 19:39:09 +0900</pubDate><guid>http://example.org/knowledge/aws-dynamodb/</guid><description>データ型 スカラー … 数値、文字列、バイナリ、ブール、null ドキュメント … リスト、マップ セット … 同一型のスカラー型を複数格納できるデータ型。文</description></item><item><title>Nvidia グラボの負荷状況をモニタする</title><link>http://example.org/knowledge/20200824_nvidia/</link><pubDate>Mon, 24 Aug 2020 19:34:20 +0900</pubDate><guid>http://example.org/knowledge/20200824_nvidia/</guid><description>Ubuntu マシンに挿したグラボの負荷状況をターミナルで表示する。 git clone https://github.com/Syllo/nvtop.git sudo apt install build-essential cmake libncurses-dev mkdir -p nvtop/build cd nvtop/build Make .. sudo make install</description></item><item><title>Hugo を使ってみる</title><link>http://example.org/knowledge/20200821_hugo/</link><pubDate>Fri, 21 Aug 2020 08:52:02 +0900</pubDate><guid>http://example.org/knowledge/20200821_hugo/</guid><description>基本操作 サイトを作成する # サイトディレクトリを作成 $ mkdir HelloHugo $ cd HelloHugo # 中を初期化 $ hugo new site # 好みのテーマファイルを取得 (ここでは ananke を指定) $ git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git</description></item></channel></rss>